# This is a basic workflow to help you get started with Actions

name: Terraform GithubAction Demo

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ARM_SUBSCRIPTION_ID:'4cc9d965-db66-4336-ac54-b86756876c5c'
      ARM_TENANT_ID:'ae130b02-379e-435f-a0c4-027c556e3625'
      ARM_CLIENT_ID:'6a861ef7-b791-4139-97a5-41a4d2cd4557'
      ARM_CLIENT_SECRET:${{secrets.ARM_CLIENT_SECRET}}
      AZURE_STORAGE:'myterraformdemo'
      
     
      # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
    # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
         creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Runs a single command using the runners shell
      - name: Build a Terraform State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE}}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
      
      - name: Terraform init
        run: Terraform init -backend-config="storage.account_name=${{env.AZURE_STORAGE }}"
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply tfplan
            
